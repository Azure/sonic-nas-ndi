module sonic-nat {
    namespace "http://github.com/Azure/sonic-nat";
    prefix snat;

    import ietf-yang-types {
        prefix yang;
    }

    import ietf-inet-types {
        prefix inet;
    }

    import sonic-common {
        prefix scommon;
    }

    organization
        "SONiC";

    contact
        "SONiC";

    description
        "SONiC NAT";

    revision 2019-10-30 {
        description
            "Initial revision.";
    }


    container sonic-nat {

        container STATIC_NAPT {

            list STATIC_NAPT_LIST {
                key "global_ip ip_protocol global_l4_port";

                leaf global_ip {
                    type inet:ipv4-address;
                }

                leaf ip_protocol {
                    type uint8 {
                        range "1|2|6|17|46|47|51|103|115";
                    }
                }

                leaf global_l4_port {
                    type uint16;
                }

                leaf local_ip {
                    mandatory true;
                    type inet:ipv4-address;
                }

                leaf local_port {
                    mandatory true;
                    type uint16;
                }

                leaf nat_type {
                    type enumeration {
                        enum SNAT;
                        enum DNAT;
                    }
                    default DNAT;
                }

                leaf twice_nat_id {
                    type uint16 {
                        range "1..9999" {
                            error-message "Invalid Group Id for twice NAPT.";
                        }
                    }
                }
            }
        }

        container STATIC_NAT {
            list STATIC_NAT_LIST {
                key "global_ip";

                leaf global_ip {
                    type inet:ipv4-address;
                }

                leaf local_ip {
                    mandatory true;
                    type inet:ipv4-address;
                }

                leaf nat_type {
                    type enumeration {
                        enum SNAT;
                        enum DNAT;
                    }
                    default DNAT;
                }

                leaf twice_nat_id {
                    type uint16 {
                        range "1..9999" {
                            error-message "Invalid Group Id for twice NAT.";
                        }
                    }
                }
            }
        }
        container NAT_GLOBAL {
            list NAT_GLOBAL_LIST {
                key "key_leaf";
                leaf key_leaf {
                    type enumeration {
                        enum Values;
                    }
                }
                leaf admin_mode {
                    type enumeration {
                        enum ENABLE;
                        enum DISABLE;
                    }
                }

                leaf nat_timeout {
                    type uint32 {
                        range "300..432000" {
                            error-message "Invalid NAT Timeout, valid range 300 sec to 432000 sec.";
                        }
                    }
                }
                leaf nat_tcp_timeout {
                    type uint32 {
                        range "300..432000" {
                            error-message "Invalid NAT TCP Timeout, valid range 300 sec to 432000 sec.";
                        }
                    }
                }
                leaf nat_udp_timeout {
                    type uint16 {
                        range "120..600" {
                            error-message "Invalid NAT UDP Timeout, valid range 120 sec to 600 sec.";
                        }
                    }
                }
            }
        }
        container NAT_POOL {
            list NAT_POOL_LIST {
                key "pool_name";

                leaf pool_name {
                    type string;
                }

                choice nat_ip {
                    case ip_address {
                        leaf IP_ADDRESS {
                            type inet:ipv4-address;
                        }
                    }
                    case ip_address_range {
                        leaf IP_ADDRESS_RANGE {
                            type string {
                                pattern '^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|'  +
              '25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4]' + 
              '[0-9]|25[0-5])$ (-) ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|'  +
              '25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4]'  +
              '[0-9]|25[0-5])$';
                            }
                        }
                    }
                }

                leaf nat_port {
                    type string {
                        pattern "[0-9]{1,5}(-)[0-9]{1,5}";
                    }
                }
            }
        }

        container NAT_BINDINGS {
            list NAT_BINDINGS_LIST {
                key "binding_name";
                leaf binding_name {
                    type string;
                }

                leaf nat_pool {
                    mandatory true;
                    type string;
                }

                leaf access_list {
                   type string; 
                }

                leaf nat_type {
                    type enumeration {
                        enum SNAT;
                        enum DNAT;
                    }
                    default SNAT;
                }
                leaf twice_nat_id {
                    type uint16 {
                        range "1..9999" {
                            error-message "Invalid Group Id for twice NAT.";
                        }
                    }
                }
                
            }
        }
    }
}
